{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceReaderKey"},{"kind":"text","text":"<"},{"text":"Value","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/Value","kind":"typeIdentifier"},{"text":"> : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conform to this protocol to express loading state from an external system, and subscribing to"},{"type":"text","text":" "},{"text":"state changes in the external system. It is only necessary to conform to this protocol if the","type":"text"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","type":"reference"},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey"},{"type":"text","text":", or "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey"},{"text":" strategies are not sufficient for your","type":"text"},{"text":" ","type":"text"},{"text":"use case.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See the article "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","type":"reference"},{"text":" for more information, in particular the","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Custom-persistence","type":"reference","isActive":true},{"type":"text","text":" section."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]]},"topicSections":[{"title":"Associated Types","generated":true,"anchor":"Associated-Types","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/ID-swift.associatedtype","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/Value"]},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/id-gq1c"],"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/load(initialValue:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/subscribe(initialValue:didSet:)-hab7"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"},{"generated":true,"anchor":"Type-Methods","title":"Type Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-2cfq9","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-5ub","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-6k27r","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-9j150","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-m54v","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decode:encode:)"]}],"abstract":[{"text":"A type that can load and subscribe to state in an external system.","type":"text"}],"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP"],"type":"inheritsFrom","kind":"relationships"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey"],"type":"inheritedBy","kind":"relationships","title":"Inherited By"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PersistenceReaderKey"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PersistenceReaderKey","kind":"identifier"}],"roleHeading":"Protocol","externalID":"s:22ComposableArchitecture20PersistenceReaderKeyP","title":"PersistenceReaderKey","symbolKind":"protocol","modules":[{"name":"ComposableArchitecture"}]},"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharedReader"],"anchor":"Read-only-persistence","generated":true,"title":"Read-only persistence"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/persistencereaderkey"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/fileStorage(_:decode:encode:)":{"role":"symbol","abstract":[{"text":"Creates a persistence key that can read and write to a value in the file system.","type":"text"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/filestorage(_:decode:encode:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fileStorage"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"decode"},{"kind":"text","text":": ("},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"encode","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"fileStorage(_:decode:encode:)","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decode:encode:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"type":"text","text":" "},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"title":"Sharing state","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/sharingstate","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKey":{"title":"AppStorageKey","navigatorTitle":[{"text":"AppStorageKey","kind":"identifier"}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/composablearchitecture\/appstoragekey","type":"topic","abstract":[{"text":"A type defining a user defaults persistence strategy.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AppStorageKey","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/appStorage(_:)-2cfq9":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-2cfq9","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"appStorage","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Creates a persistence key that can read and write to an optional integer user default,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"transforming that to a "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":" data type."}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/appstorage(_:)-2cfq9","role":"symbol","kind":"symbol","type":"topic","title":"appStorage(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/appStorage(_:)-m54v":{"role":"symbol","abstract":[{"type":"text","text":"Creates a persistence key that can read and write to a string user default, transforming"},{"type":"text","text":" "},{"type":"text","text":"that to a "},{"type":"codeVoice","code":"RawRepresentable"},{"text":" data type.","type":"text"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/appstorage(_:)-m54v","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"appStorage"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"appStorage(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-m54v"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState#Custom-persistence":{"abstract":[],"title":"Custom persistence","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Custom-persistence","type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate#Custom-persistence","kind":"section"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/appStorage(_:)-6k27r":{"role":"symbol","abstract":[{"type":"text","text":"Creates a persistence key that can read and write to an integer user default, transforming"},{"text":" ","type":"text"},{"text":"that to a ","type":"text"},{"code":"RawRepresentable","type":"codeVoice"},{"type":"text","text":" data type."}],"kind":"symbol","type":"topic","title":"appStorage(_:)","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/appstorage(_:)-6k27r","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"appStorage"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-6k27r"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/id-gq1c":{"title":"id","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/id-gq1c","required":true,"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"ID","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP2IDQa","kind":"typeIdentifier"}],"kind":"symbol","defaultImplementations":1,"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/id-gq1c","role":"symbol","abstract":[{"type":"text","text":"The hashable identity of a persistence key."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey":{"type":"topic","title":"PersistenceReaderKey","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistenceReaderKey"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","abstract":[{"text":"A type that can load and subscribe to state in an external system.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PersistenceReaderKey"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/Value":{"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/value","required":true,"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/Value","abstract":[{"type":"text","text":"A type that can be loaded or subscribed to in an external system."}],"title":"Value","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryKey":{"abstract":[{"type":"text","text":"A type defining an in-memory persistence strategy"}],"title":"InMemoryKey","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","navigatorTitle":[{"text":"InMemoryKey","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InMemoryKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/inmemorykey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"kind":"symbol","navigatorTitle":[{"text":"AppStorageKeyPathKey","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AppStorageKeyPathKey"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":", ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","abstract":[{"text":"A type defining a user defaults persistence strategy via key path.","type":"text"}],"title":"AppStorageKeyPathKey","type":"topic","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/appStorage(_:)-5ub":{"role":"symbol","abstract":[{"text":"Creates a persistence key for sharing data in user defaults given a key path.","type":"text"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/appstorage(_:)-5ub","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"appStorage"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"_SendableReferenceWritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture33_SendableReferenceWritableKeyPatha"},{"kind":"text","text":"<"},{"text":"UserDefaults","preciseIdentifier":"c:objc(cs)NSUserDefaults","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"appStorage(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-5ub"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/subscribe(initialValue:didSet:)-hab7":{"abstract":[{"type":"text","text":"Subscribes to external updates."}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/subscribe(initialvalue:didset:)-hab7","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"subscribe"},{"kind":"text","text":"("},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"didSet","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Shared","preciseIdentifier":"s:22ComposableArchitecture6SharedV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:22ComposableArchitecture6SharedV12SubscriptionC","text":"Subscription","kind":"typeIdentifier"}],"defaultImplementations":1,"title":"subscribe(initialValue:didSet:)","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/subscribe(initialValue:didSet:)-hab7"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharedReader":{"navigatorTitle":[{"kind":"identifier","text":"SharedReader"}],"title":"SharedReader","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharedReader","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedReader"}],"url":"\/documentation\/composablearchitecture\/sharedreader","kind":"symbol","abstract":[{"text":"A property wrapper type that shares a value with multiple parts of an application.","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","title":"Reducer","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/appStorage(_:)-9j150":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-9j150","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"appStorage"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Creates a persistence key that can read and write to an optional string user default,"},{"type":"text","text":" "},{"type":"text","text":"transforming that to a "},{"type":"codeVoice","code":"RawRepresentable"},{"text":" data type.","type":"text"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/appstorage(_:)-9j150","role":"symbol","kind":"symbol","type":"topic","title":"appStorage(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FileStorageKey"}],"url":"\/documentation\/composablearchitecture\/filestoragekey","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","title":"FileStorageKey","navigatorTitle":[{"kind":"identifier","text":"FileStorageKey"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A type defining a file persistence strategy","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault":{"title":"PersistenceKeyDefault","navigatorTitle":[{"text":"PersistenceKeyDefault","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PersistenceKey"},{"type":"text","text":"."}]},"url":"\/documentation\/composablearchitecture\/persistencekeydefault","type":"topic","abstract":[{"text":"A persistence key that provides a default value to an existing persistence key.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistenceKeyDefault"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/load(initialValue:)":{"required":true,"role":"symbol","abstract":[{"text":"Loads the freshest value from storage. Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if there is no value in storage."}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/load(initialvalue:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"load","kind":"identifier"},{"text":"(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value"},{"kind":"text","text":"?"}],"title":"load(initialValue:)","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/load(initialValue:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/ID-swift.associatedtype":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/ID-swift.associatedtype","role":"symbol","required":true,"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/id-swift.associatedtype","kind":"symbol","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"ID","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"text":"Self","kind":"typeIdentifier"}],"title":"ID","abstract":[{"text":"A type representing the hashable identity of a persistence key.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey":{"url":"\/documentation\/composablearchitecture\/persistencekey","navigatorTitle":[{"kind":"identifier","text":"PersistenceKey"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistenceKey","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","type":"topic","title":"PersistenceKey","kind":"symbol","abstract":[{"type":"text","text":"A type that can persist shared state to an external storage."}]}}}