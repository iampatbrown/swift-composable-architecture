{"schemaVersion":{"patch":0,"major":0,"minor":3},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Further scope the store into the 'state' and 'action' cases, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.5#Enum-driven-navigation-APIs"}],"type":"paragraph"}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"IfContent"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"text":"PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"text":"<","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"state","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"DestinationState"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": (","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"DestinationAction"},{"text":", ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"IfContent","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"else","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"ElseContent"},{"text":")","kind":"text"}],"platforms":[],"role":"symbol","title":"init(_:state:action:then:else:)","externalID":"s:22ComposableArchitecture10IfLetStoreV_5state6action4then4elseACyxq_7SwiftUI19_ConditionalContentVyqd_1_qd_2_GGAA0E0CyAA17PresentationStateVyqd__GAA0N6ActionOyqd_0_GG_xSgqd__cqd_0_q_cqd_1_ANyxq_Gcqd_2_yctcAKRs0_AH4ViewRd_1_AhXRd_2_r2_lufc","roleHeading":"Initializer","symbolKind":"init"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:else:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"]]},"abstract":[{"text":"Initializes an ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"reference","isActive":true},{"type":"text","text":" view that computes content depending on if a store of"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" and state can further"},{"type":"text","text":" "},{"type":"text","text":"be extracted from the destination state, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"text":" it matches a particular case of an enum.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"kind":"attribute","text":"@preconcurrency"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"IfContent"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"store","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","text":"Store"},{"text":"<","kind":"text"},{"text":"PresentationState","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","kind":"typeIdentifier","text":"PresentationAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationAction"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"state"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"toState"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"DestinationState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fromAction"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"DestinationAction"},{"text":", ","kind":"text"},{"text":"@","kind":"attribute"},{"text":"ViewBuilder","kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV"},{"kind":"text","text":" "},{"kind":"externalParam","text":"then"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"ifContent"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"Store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"IfContent"},{"text":", ","kind":"text"},{"kind":"attribute","text":"@"},{"text":"ViewBuilder","kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV"},{"text":" ","kind":"text"},{"kind":"externalParam","text":"else"},{"kind":"text","text":" "},{"kind":"internalParam","text":"elseContent"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" () -> "},{"text":"ElseContent","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"_ConditionalContent"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"IfContent"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"IfContent","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A store of optional state.","type":"text"}],"type":"paragraph"}],"name":"store"},{"content":[{"inlineContent":[{"text":"A closure that attempts to extract state for the “if” branch from the destination","type":"text"},{"text":" ","type":"text"},{"text":"state.","type":"text"}],"type":"paragraph"}],"name":"toState"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that embeds actions for the “if” branch in destination actions.","type":"text"}]}],"name":"fromAction"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A function that is given a store of non-optional state and returns a view that"},{"type":"text","text":" "},{"text":"is visible only when the optional state is non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" and state can be extracted from the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"destination state."}]}],"name":"ifContent"},{"name":"elseContent","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A view that is only visible when state cannot be extracted from the"},{"type":"text","text":" "},{"text":"destination.","type":"text"}]}]}],"kind":"parameters"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/init(_:state:action:then:else:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"role":"symbol","title":"PresentationAction","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"PresentationAction","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","navigatorTitle":[{"kind":"identifier","text":"PresentationAction"}],"type":"topic","url":"\/documentation\/composablearchitecture\/presentationaction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"navigatorTitle":[{"text":"Store","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/store","title":"Store","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PresentationState"}],"type":"topic","abstract":[{"text":"A property wrapper for state that can be presented.","type":"text"}],"navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/presentationstate","role":"symbol","title":"PresentationState","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"title":"IfLetStore","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"IfLetStore","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"url":"\/documentation\/composablearchitecture\/ifletstore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:state:action:then:else:)":{"type":"topic","title":"init(_:state:action:then:else:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:else:)","url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:state:action:then:else:)","deprecated":true,"kind":"symbol","abstract":[{"type":"text","text":"Initializes an "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"reference","isActive":true},{"type":"text","text":" view that computes content depending on if a store of"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true,"type":"reference"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" or non-","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" and state can further"},{"type":"text","text":" "},{"type":"text","text":"be extracted from the destination state, "},{"type":"emphasis","inlineContent":[{"text":"e.g.","type":"text"}]},{"type":"text","text":" it matches a particular case of an enum."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"IfContent","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"ElseContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"PresentationAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"text":"<","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"state","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"State"},{"text":"?, ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":", "},{"kind":"externalParam","text":"then"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"IfContent"},{"kind":"text","text":", "},{"text":"else","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ElseContent","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol"}}}