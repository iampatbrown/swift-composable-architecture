{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use 'if let' with a store of observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-IfLetStore-with-if-let]","type":"text"}]}],"metadata":{"title":"body","platforms":[],"role":"symbol","symbolKind":"property","externalID":"s:22ComposableArchitecture10IfLetStoreV4bodyQrvp","roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"modules":[{"name":"ComposableArchitecture"}]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.body"},{"text":".","type":"text"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/body"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/body"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"title":"IfLetStore","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"IfLetStore","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"url":"\/documentation\/composablearchitecture\/ifletstore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/body":{"type":"topic","title":"body","abstract":[],"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/body","url":"\/documentation\/composablearchitecture\/ifletstore\/body"}}}