{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateIgnored()","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(accessor, names: named(willSet)) "},{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservationStateIgnored"},{"kind":"text","text":"()"}],"platforms":["macOS"]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"seeAlsoSections":[{"anchor":"Supporting-macros","generated":true,"title":"Supporting macros","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateTracked()"]}],"metadata":{"role":"symbol","externalID":"s:22ComposableArchitecture23ObservationStateIgnoredyycfm","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Macro","symbolKind":"macro","title":"ObservationStateIgnored()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservationStateIgnored"},{"kind":"text","text":"()"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()"]]},"variants":[{"paths":["\/documentation\/composablearchitecture\/observationstateignored()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateIgnored()":{"type":"topic","title":"ObservationStateIgnored()","url":"\/documentation\/composablearchitecture\/observationstateignored()","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateIgnored()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservationStateIgnored"},{"kind":"text","text":"()"}],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateTracked()":{"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservationStateTracked"},{"kind":"text","text":"()"}],"url":"\/documentation\/composablearchitecture\/observationstatetracked()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateTracked()","abstract":[],"title":"ObservationStateTracked()","kind":"symbol","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"url":"\/documentation\/composablearchitecture\/observablestate()","role":"symbol","kind":"symbol","title":"ObservableState()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","title":"Reducer","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"title":"State","required":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","type":"topic","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/state","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}