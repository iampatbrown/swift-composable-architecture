{"metadata":{"title":"withState(_:)","externalID":"s:22ComposableArchitecture5StoreC9withStateyqd__qd__xXElF","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withState","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"}],"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)"},"abstract":[{"type":"text","text":"Calls the given closure with a snapshot of the current state of the store."}],"seeAlsoSections":[{"anchor":"Accessing-state","title":"Accessing state","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withState","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"body"},{"text":": (","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"body","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes the current state of the store as its sole argument. If","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the closure has a return value, that value is also used as the return value of the"},{"type":"text","text":" "},{"code":"withState","type":"codeVoice"},{"text":" method. The state argument reflects the current state of the store only for the","type":"text"},{"type":"text","text":" "},{"text":"duration of the closureâ€™s execution, and is only observable over time, ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"type":"text","text":" by SwiftUI, if"},{"type":"text","text":" "},{"type":"text","text":"it conforms to "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","isActive":true},{"type":"text","text":"."}]}]}]},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"The return value, if any, of the "},{"type":"codeVoice","code":"body"},{"text":" closure.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"A lightweight way of accessing store state when state is not observable and ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","isActive":true,"type":"reference"},{"type":"text","text":" is"},{"text":" ","type":"text"},{"text":"unavailable.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/composablearchitecture\/store\/withstate(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/subscript(dynamicMember:)-655ef":{"fragments":[{"kind":"keyword","text":"subscript"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":">) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"code":"ObservableState","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","title":"subscript(dynamicMember:)","url":"\/documentation\/composablearchitecture\/store\/subscript(dynamicmember:)-655ef","abstract":[],"role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"navigatorTitle":[{"text":"Store","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/store","title":"Store","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"url":"\/documentation\/composablearchitecture\/observablestate","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","abstract":[],"title":"ObservableState","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableState"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/state-1qxwl":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableState"},{"type":"text","text":"."}]},"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"state"},{"kind":"text","text":": "},{"text":"State","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Direct access to state in the store when "},{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","isActive":true},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/state-1qxwl","title":"state","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/withState(_:)":{"abstract":[{"text":"Calls the given closure with a snapshot of the current state of the store.","type":"text"}],"title":"withState(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","url":"\/documentation\/composablearchitecture\/store\/withstate(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withState","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"State"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"}],"type":"topic"}}}