{"metadata":{"roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"defaultScrollAnchor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UnitPoint","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9UnitPointV"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"externalID":"s:7SwiftUI4ViewPAAE19defaultScrollAnchoryQrAA9UnitPointVSgF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","platforms":[{"name":"iOS","unavailable":false,"introducedAt":"17.0","deprecated":false,"beta":false},{"introducedAt":"14.0","deprecated":false,"unavailable":false,"name":"macOS","beta":false},{"deprecated":false,"beta":false,"unavailable":false,"name":"tvOS","introducedAt":"17.0"},{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"10.0","name":"watchOS"}],"symbolKind":"method","title":"defaultScrollAnchor(_:)","extendedModule":"SwiftUICore"},"variants":[{"paths":["\/documentation\/composablearchitecture\/switchstore\/defaultscrollanchor(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/defaultScrollAnchor(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"defaultScrollAnchor","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"anchor","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"UnitPoint","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9UnitPointV"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}]}]}],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.defaultScrollAnchor(_:)","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","url":"\/documentation\/composablearchitecture\/caselet","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"deprecated":true,"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","kind":"article","title":"View Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/defaultScrollAnchor(_:)":{"url":"\/documentation\/composablearchitecture\/switchstore\/defaultscrollanchor(_:)","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/defaultScrollAnchor(_:)","title":"defaultScrollAnchor(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"defaultScrollAnchor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UnitPoint","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9UnitPointV"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"title":"SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views.","type":"text"}],"deprecated":true,"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"}}}