{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/switchstore\/previewdevice(_:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/previewDevice(_:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previewDevice"},{"kind":"text","text":"("},{"text":"PreviewDevice","preciseIdentifier":"s:7SwiftUI13PreviewDeviceV","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"symbolKind":"method","roleHeading":"Instance Method","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"platforms":[{"unavailable":false,"introducedAt":"13.0","beta":false,"deprecated":false,"name":"iOS"},{"unavailable":false,"name":"macOS","introducedAt":"10.15","beta":false,"deprecated":false},{"beta":false,"unavailable":false,"name":"tvOS","deprecated":false,"introducedAt":"13.0"},{"introducedAt":"6.0","deprecated":false,"unavailable":false,"name":"watchOS","beta":false}],"externalID":"s:7SwiftUI4ViewPAAE13previewDeviceyQrAA07PreviewE0VSgF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","role":"symbol","extendedModule":"SwiftUICore","title":"previewDevice(_:)"},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previewDevice","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI13PreviewDeviceV","text":"PreviewDevice","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}]}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.previewDevice(_:)","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","kind":"article","title":"View Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"title":"SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views.","type":"text"}],"deprecated":true,"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","url":"\/documentation\/composablearchitecture\/caselet","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"deprecated":true,"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/previewDevice(_:)":{"url":"\/documentation\/composablearchitecture\/switchstore\/previewdevice(_:)","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/previewDevice(_:)","title":"previewDevice(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previewDevice","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7SwiftUI13PreviewDeviceV","text":"PreviewDevice","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"}}}