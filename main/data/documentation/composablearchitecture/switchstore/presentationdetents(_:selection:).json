{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"presentationDetents","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"detents","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI18PresentationDetentV","text":"PresentationDetent"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"selection"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"text":"PresentationDetent","preciseIdentifier":"s:7SwiftUI18PresentationDetentV","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"extendedModule":"SwiftUICore","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"roleHeading":"Instance Method","platforms":[{"unavailable":false,"name":"iOS","introducedAt":"16.0","beta":false,"deprecated":false},{"beta":false,"unavailable":false,"introducedAt":"13.0","deprecated":false,"name":"macOS"},{"unavailable":false,"beta":false,"introducedAt":"16.0","name":"tvOS","deprecated":false},{"introducedAt":"9.0","name":"watchOS","beta":false,"deprecated":false,"unavailable":false}],"externalID":"s:7SwiftUI4ViewPAAE19presentationDetents_9selectionQrShyAA18PresentationDetentVG_AA7BindingVyAGGtF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","title":"presentationDetents(_:selection:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"presentationDetents"},{"kind":"text","text":"("},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7SwiftUI18PresentationDetentV","text":"PresentationDetent","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"selection","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"PresentationDetent","preciseIdentifier":"s:7SwiftUI18PresentationDetentV"},{"kind":"text","text":">) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"role":"symbol"},"kind":"symbol","abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.presentationDetents(_:selection:)","type":"codeVoice"},{"type":"text","text":"."}],"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/switchstore\/presentationdetents(_:selection:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/presentationDetents(_:selection:)","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","url":"\/documentation\/composablearchitecture\/caselet","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"deprecated":true,"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","kind":"article","title":"View Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/presentationDetents(_:selection:)":{"type":"topic","title":"presentationDetents(_:selection:)","abstract":[],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"presentationDetents","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"PresentationDetent","preciseIdentifier":"s:7SwiftUI18PresentationDetentV"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"selection"},{"kind":"text","text":": "},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7SwiftUI18PresentationDetentV","kind":"typeIdentifier","text":"PresentationDetent"},{"text":">) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/presentationDetents(_:selection:)","url":"\/documentation\/composablearchitecture\/switchstore\/presentationdetents(_:selection:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"title":"SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views.","type":"text"}],"deprecated":true,"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol"}}}