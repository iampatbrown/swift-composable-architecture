{"metadata":{"platforms":[],"externalID":"s:22ComposableArchitecture12ForEachStoreV","modules":[{"name":"ComposableArchitecture"}],"role":"symbol","roleHeading":"Structure","navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}],"title":"ForEachStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ForEachStore","kind":"identifier"}],"symbolKind":"struct"},"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-1cwd0","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-4l45p"],"generated":true},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/body","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/data"]},{"anchor":"Default-Implementations","title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/DynamicViewContent-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/View-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/View-Implementations"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForEachStore","kind":"identifier"},{"text":"<","kind":"text"},{"text":"EachState","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"EachAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Data"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ID"},{"text":", ","kind":"text"},{"text":"Content","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Data","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ID"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"text":"ID","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Content"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore"},{"type":"text","text":" loops over a store’s collection with a store scoped to the domain of each"},{"type":"text","text":" "},{"text":"element. This allows you to extract and modularize an element’s view and avoid concerns around","type":"text"},{"text":" ","type":"text"},{"text":"collection index math and parent-child store communication.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, a todos app may define the domain and logic associated with an individual todo:"}]},{"syntax":"swift","code":["@Reducer","struct Todo {","  struct State: Equatable, Identifiable {","    let id: UUID","    var description = \"\"","    var isComplete = false","  }","","  enum Action {","    case isCompleteToggled(Bool)","    case descriptionChanged(String)","  }","","  var body: some Reducer<State, Action> {","    \/\/ ...","  }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As well as a view with a domain-specific store:"}]},{"code":["struct TodoView: View {","  let store: StoreOf<Todo>","  var body: some View { \/* ... *\/ }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For a parent domain to work with a collection of todos, it can hold onto this collection in"},{"type":"text","text":" "},{"type":"text","text":"state:"}]},{"type":"codeListing","code":["@Reducer","struct Todos {","  struct State: Equatable {","    var todos: IdentifiedArrayOf<Todo.State> = []","  }","  \/\/ ...","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Define a case to handle actions sent to the child domain:"}],"type":"paragraph"},{"type":"codeListing","code":["enum Action {","  case todos(IdentifiedActionOf<Todo>)","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Enhance its core reducer using"},{"type":"text","text":" "},{"code":"Reducer\/forEach(_:action:element:fileID:filePath:line:column:)-3dw7i","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["var body: some Reducer<State, Action> {","  Reduce { state, action in","    \/\/ ...","  }","  .forEach(\\.todos, action: \\.todos) {","    Todo()","  }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"And finally render a list of "},{"code":"TodoView","type":"codeVoice"},{"text":"s using ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","isActive":true,"type":"reference"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["ForEachStore(","  self.store.scope(state: \\.todos, action: \\.todos)",") { todoStore in","  TodoView(store: todoStore)","}"],"type":"codeListing"}]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Pass 'ForEach' a store scoped to an identified array and identified action, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-ForEachStore-with-ForEach]","type":"text"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/foreachstore"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"]]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s8SendableP","doc:\/\/ComposableArchitecture\/7SwiftUI18DynamicViewContentP","doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP"]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore"],"anchor":"View-containers","title":"View containers"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A Composable Architecture-friendly wrapper around "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" that simplifies working with"},{"text":" ","type":"text"},{"text":"collections of state.","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","url":"\/documentation\/composablearchitecture\/caselet","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"deprecated":true,"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationLinkStore":{"abstract":[{"type":"text","text":"A view that controls a navigation presentation."}],"navigatorTitle":[{"text":"NavigationLinkStore","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationLinkStore"}],"title":"NavigationLinkStore","deprecated":true,"url":"\/documentation\/composablearchitecture\/navigationlinkstore","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"title":"SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views.","type":"text"}],"deprecated":true,"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/DynamicViewContent-Implementations":{"url":"\/documentation\/composablearchitecture\/foreachstore\/dynamicviewcontent-implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/DynamicViewContent-Implementations","kind":"article","abstract":[],"title":"DynamicViewContent Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/body":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/body","title":"body","type":"topic","abstract":[],"role":"symbol","deprecated":true,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"body","kind":"identifier"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"url":"\/documentation\/composablearchitecture\/foreachstore\/body","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/data":{"abstract":[],"type":"topic","title":"data","url":"\/documentation\/composablearchitecture\/foreachstore\/data","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/data","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"data","kind":"identifier"},{"kind":"text","text":": "},{"text":"Data","kind":"typeIdentifier"}],"role":"symbol","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"WithViewStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/withviewstore","abstract":[{"type":"text","text":"A view helper that transforms a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" into a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":" so that its state can be observed"},{"type":"text","text":" "},{"text":"by a view builder.","type":"text"}],"navigatorTitle":[{"text":"WithViewStore","kind":"identifier"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","type":"topic","title":"WithViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/init(_:content:)-4l45p":{"role":"symbol","abstract":[{"type":"text","text":"Initializes a structure that computes views on demand from a store on a collection of data and"},{"text":" ","type":"text"},{"type":"text","text":"an identified action."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"EachContent","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV","text":"IdentifiedArray"},{"text":"<","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"EachState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16IdentifiedActionO","text":"IdentifiedAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"EachAction","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"content"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"EachState"},{"text":", ","kind":"text"},{"text":"EachAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"EachContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/foreachstore\/init(_:content:)-4l45p","title":"init(_:content:)","deprecated":true,"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-4l45p"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"title":"ForEachStore","deprecated":true,"navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","role":"symbol","url":"\/documentation\/composablearchitecture\/foreachstore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ForEachStore","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A Composable Architecture-friendly wrapper around "},{"code":"ForEach","type":"codeVoice"},{"text":" that simplifies working with","type":"text"},{"type":"text","text":" "},{"text":"collections of state.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"title":"IfLetStore","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"IfLetStore","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"url":"\/documentation\/composablearchitecture\/ifletstore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/View-Implementations":{"title":"View Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/View-Implementations","abstract":[],"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/foreachstore\/view-implementations"},"doc://ComposableArchitecture/7SwiftUI18DynamicViewContentP":{"identifier":"doc:\/\/ComposableArchitecture\/7SwiftUI18DynamicViewContentP","title":"SwiftUICore.DynamicViewContent","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"abstract":[{"text":"A ","type":"text"},{"code":"ViewStore","type":"codeVoice"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"type":"text","text":" "},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"deprecated":true,"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/viewstore","title":"ViewStore","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},"doc://ComposableArchitecture/s8CopyableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationStackStore":{"title":"NavigationStackStore","url":"\/documentation\/composablearchitecture\/navigationstackstore","navigatorTitle":[{"kind":"identifier","text":"NavigationStackStore"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NavigationStackStore"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore","kind":"symbol","abstract":[{"text":"A navigation stack that is driven by a store.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/init(_:content:)-1cwd0":{"abstract":[],"type":"topic","title":"init(_:content:)","url":"\/documentation\/composablearchitecture\/foreachstore\/init(_:content:)-1cwd0","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-1cwd0","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"EachContent","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"text":"IdentifiedArray","kind":"typeIdentifier","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV"},{"text":"<","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"EachState"},{"kind":"text","text":">, (id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", action"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"EachAction"},{"kind":"text","text":")>, "},{"text":"content","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"EachState"},{"text":", ","kind":"text"},{"text":"EachAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"EachContent","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"navigatorTitle":[{"text":"Store","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/store","title":"Store","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/7SwiftUI4ViewP":{"identifier":"doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP","title":"SwiftUICore.View","type":"unresolvable"}}}