{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"@","kind":"attribute"},{"text":"ReducerBuilder","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","kind":"attribute","preciseIdentifier":"s:22ComposableArchitecture14ReducerBuilderO"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">"},{"text":" ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"build","kind":"internalParam"},{"text":": () -> ","kind":"text"},{"text":"Reducers","kind":"typeIdentifier"},{"text":")","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A reducer builder."}],"type":"paragraph"}],"name":"build"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/combinereducers\/init(_:)"]}],"abstract":[{"type":"text","text":"Initializes a reducer that combines all of the reducers in the given build block."}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture15CombineReducersVyACyxq_q0_Gq0_yXEcfc","roleHeading":"Initializer","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"text":"(() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Reducers"},{"text":")","kind":"text"}],"title":"init(_:)","role":"symbol"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/init(_:)","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/init(_:)":{"role":"symbol","abstract":[{"type":"text","text":"Initializes a reducer that combines all of the reducers in the given build block."}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"(() -> "},{"text":"Reducers","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","title":"init(_:)","url":"\/documentation\/composablearchitecture\/combinereducers\/init(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/init(_:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CombineReducers","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/combinereducers","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","title":"CombineReducers","navigatorTitle":[{"kind":"identifier","text":"CombineReducers"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Combines multiple reducers into a single reducer.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","title":"Reducer","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","navigatorTitle":[{"text":"ReducerBuilder","kind":"identifier"}],"kind":"symbol","title":"ReducerBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerBuilder"}],"url":"\/documentation\/composablearchitecture\/reducerbuilder","abstract":[{"type":"text","text":"A result builder for combining reducers into a single reducer by running each, one after the"},{"type":"text","text":" "},{"type":"text","text":"other, and merging their effects."}]}}}