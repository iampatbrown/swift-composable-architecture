{"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/combinereducers\/signpost(_:log:)"]}],"metadata":{"extendedModule":"ComposableArchitecture","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"signpost","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"log"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)OS_os_log","text":"OSLog","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_SignpostReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture7ReducerPAAE8signpost_3logAA09_SignpostC0VyxGSS_So06OS_os_E0CtF::SYNTHESIZED::s:22ComposableArchitecture15CombineReducersV","roleHeading":"Instance Method","title":"signpost(_:log:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@warn_unqualified_access"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"signpost"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"prefix"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" = \"\", ","kind":"text"},{"kind":"externalParam","text":"log"},{"text":": ","kind":"text"},{"text":"OSLog","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)OS_os_log"},{"kind":"text","text":" = OSLog(\n      subsystem: \"co.pointfree.ComposableArchitecture\",\n      category: \"Reducer Instrumentation\"\n    )) -> "},{"text":"_SignpostReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"prefix","content":[{"inlineContent":[{"text":"A string to print at the beginning of the formatted message for the signpost.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"OSLog"},{"type":"text","text":" to use for signposts."}]}],"name":"log"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A reducer that has been enhanced with instrumentation."}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each invocation of the reducer will be measured by an interval, and the lifecycle of its"},{"type":"text","text":" "},{"type":"text","text":"effects will be measured with interval and event signposts."}]},{"inlineContent":[{"type":"text","text":"To use, build your app for profiling, create a blank instrument, and add the signpost"},{"text":" ","type":"text"},{"text":"instrument. Start recording your app you will see timing information for every action sent to","type":"text"},{"type":"text","text":" "},{"text":"the store, as well as every effect executed.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Effect instrumentation can be particularly useful for inspecting the lifecycle of long-living"},{"text":" ","type":"text"},{"text":"effects. For example, if you start an effect (","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"text":", a location manager) in ","type":"text"},{"code":"onAppear","type":"codeVoice"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"forget to tear down the effect in "},{"code":"onDisappear","type":"codeVoice"},{"type":"text","text":", the instrument will show that the effect"},{"type":"text","text":" "},{"text":"never completed.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Instruments a reducer with"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/signpost(_:log:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/Reducer-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/Reducer-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/Reducer-Implementations","url":"\/documentation\/composablearchitecture\/combinereducers\/reducer-implementations","kind":"article","abstract":[],"role":"collectionGroup","title":"Reducer Implementations","type":"topic"},"https://developer.apple.com/documentation/os/logging/recording_performance_data":{"type":"link","titleInlineContent":[{"type":"text","text":"signposts"}],"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","url":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","title":"signposts"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","title":"Reducer","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CombineReducers","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/combinereducers","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","title":"CombineReducers","navigatorTitle":[{"kind":"identifier","text":"CombineReducers"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Combines multiple reducers into a single reducer.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/signpost(_:log:)":{"url":"\/documentation\/composablearchitecture\/combinereducers\/signpost(_:log:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"signpost"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"log"},{"text":": ","kind":"text"},{"text":"OSLog","preciseIdentifier":"c:objc(cs)OS_os_log","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"_SignpostReducer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/signpost(_:log:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Instruments a reducer with"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","isActive":true},{"text":".","type":"text"}],"title":"signpost(_:log:)"}}}