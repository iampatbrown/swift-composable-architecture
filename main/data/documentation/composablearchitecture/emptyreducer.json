{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EmptyReducer","kind":"identifier"}],"title":"EmptyReducer","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture12EmptyReducerV","navigatorTitle":[{"kind":"identifier","text":"EmptyReducer"}],"role":"symbol","roleHeading":"Structure"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/emptyreducer"]}],"abstract":[{"type":"text","text":"A reducer that does nothing."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional"],"title":"Supporting reducers","generated":true,"anchor":"Supporting-reducers"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/init()"],"generated":true,"anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/reduce(into:action:)"],"anchor":"Instance-Methods","title":"Instance Methods"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/Reducer-Implementations"],"anchor":"Default-Implementations","generated":true,"title":"Default Implementations"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyReducer"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Action"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"While not very useful on its own, "},{"code":"EmptyReducer","type":"codeVoice"},{"text":" can be used as a placeholder in APIs that hold","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reducers."}],"type":"paragraph"}],"kind":"content"}],"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"abstract":[{"text":"A reducer that updates bindable state when it receives binding actions.","type":"text"}],"title":"BindingReducer","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","url":"\/documentation\/composablearchitecture\/bindingreducer","navigatorTitle":[{"kind":"identifier","text":"BindingReducer"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindingReducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer":{"url":"\/documentation\/composablearchitecture\/emptyreducer","role":"symbol","type":"topic","title":"EmptyReducer","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmptyReducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","navigatorTitle":[{"text":"EmptyReducer","kind":"identifier"}],"abstract":[{"text":"A reducer that does nothing.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer/reduce(into:action:)":{"title":"reduce(into:action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/reduce(into:action:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Action"},{"text":") -> ","kind":"text"},{"text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/emptyreducer\/reduce(into:action:)","kind":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","title":"Reducer","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer/init()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/init()","kind":"symbol","url":"\/documentation\/composablearchitecture\/emptyreducer\/init()","type":"topic","role":"symbol","abstract":[{"text":"Initializes a reducer that does nothing.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"title":"init()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer/Reducer-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/composablearchitecture\/emptyreducer\/reducer-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/Reducer-Implementations","title":"Reducer Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional":{"abstract":[],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"text":"Optional","preciseIdentifier":"s:Sq","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/swift\/optional","type":"topic","navigatorTitle":[{"text":"Optional","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","role":"symbol","title":"Optional","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}