{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"ID","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":" = "},{"text":"Self","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/persistencereaderkey\/id-swift.associatedtype"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey"]]},"sections":[],"abstract":[{"text":"A type representing the hashable identity of a persistence key.","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/ID-swift.associatedtype","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"ID","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"text":" = ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"ID","roleHeading":"Associated Type","required":true,"symbolKind":"associatedtype","modules":[{"name":"ComposableArchitecture"}],"role":"symbol","externalID":"s:22ComposableArchitecture20PersistenceReaderKeyP2IDQa"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/ID-swift.associatedtype":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/ID-swift.associatedtype","role":"symbol","required":true,"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/id-swift.associatedtype","kind":"symbol","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"ID","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"text":"Self","kind":"typeIdentifier"}],"title":"ID","abstract":[{"text":"A type representing the hashable identity of a persistence key.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey":{"type":"topic","title":"PersistenceReaderKey","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistenceReaderKey"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","abstract":[{"text":"A type that can load and subscribe to state in an external system.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PersistenceReaderKey"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"type":"text","text":" "},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"title":"Sharing state","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/sharingstate","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","title":"Reducer","kind":"symbol"}}}