{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView\/trimPrefix(_:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/composablearchitecture\/stackstate\/pathview\/trimprefix(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView\/RangeReplaceableCollection-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView\/RangeReplaceableCollection-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"RangeReplaceableCollection.trimPrefix(_:)","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimPrefix"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Prefix"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"prefix","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Prefix","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Prefix"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":" == ","kind":"text"},{"text":"Prefix","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","metadata":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimPrefix","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Prefix","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Prefix"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","title":"trimPrefix(_:)","symbolKind":"method","modules":[{"name":"ComposableArchitecture","relatedModules":["Swift"]}],"extendedModule":"Swift","platforms":[{"name":"iOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"16.0"},{"introducedAt":"13.0","deprecated":false,"unavailable":false,"beta":false,"name":"macOS"},{"unavailable":false,"name":"tvOS","introducedAt":"16.0","beta":false,"deprecated":false},{"unavailable":false,"introducedAt":"9.0","beta":false,"deprecated":false,"name":"watchOS"}],"role":"symbol","externalID":"s:Sm17_StringProcessingSQ7ElementRpzrlE10trimPrefixyyqd__STRd__ABQyd__ACRSlF::SYNTHESIZED::s:22ComposableArchitecture10StackStateV8PathViewV"},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState/PathView":{"url":"\/documentation\/composablearchitecture\/stackstate\/pathview","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathView"}],"title":"StackState.PathView","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PathView"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","title":"Reducer","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"title":"Navigation","kind":"article","type":"topic","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState/PathView/RangeReplaceableCollection-Implementations":{"type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/stackstate\/pathview\/rangereplaceablecollection-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView\/RangeReplaceableCollection-Implementations","abstract":[],"role":"collectionGroup","title":"RangeReplaceableCollection Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState/PathView/trimPrefix(_:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView\/trimPrefix(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"trimPrefix","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Prefix","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Prefix"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/stackstate\/pathview\/trimprefix(_:)","abstract":[],"title":"trimPrefix(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"url":"\/documentation\/composablearchitecture\/stackstate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","navigatorTitle":[{"kind":"identifier","text":"StackState"}],"type":"topic","title":"StackState","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackState"}],"abstract":[{"text":"A list of data representing the content of a navigation stack.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect"}}}