{"variants":[{"paths":["\/documentation\/composablearchitecture\/persistencekeydefault\/id"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture21PersistenceKeyDefaultV2id2IDQzvp","symbolKind":"property","role":"symbol","roleHeading":"Instance Property","title":"id","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"ID","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP2IDQa"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP2IDQa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/ID-swift.associatedtype","text":"ID"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]}],"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"PersistenceReaderKey.id"},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/id"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"type":"text","text":" "},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"title":"Sharing state","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/sharingstate","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","title":"Reducer","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/id":{"type":"topic","abstract":[],"url":"\/documentation\/composablearchitecture\/persistencekeydefault\/id","kind":"symbol","role":"symbol","title":"id","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"id"},{"text":": ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP2IDQa","text":"ID","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/id"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/ID-swift.associatedtype":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/ID-swift.associatedtype","role":"symbol","required":true,"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/id-swift.associatedtype","kind":"symbol","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"ID","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"text":"Self","kind":"typeIdentifier"}],"title":"ID","abstract":[{"text":"A type representing the hashable identity of a persistence key.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault":{"type":"topic","abstract":[{"type":"text","text":"A persistence key that provides a default value to an existing persistence key."}],"url":"\/documentation\/composablearchitecture\/persistencekeydefault","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault","title":"PersistenceKeyDefault","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistenceKeyDefault","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"PersistenceKeyDefault"}]}}}