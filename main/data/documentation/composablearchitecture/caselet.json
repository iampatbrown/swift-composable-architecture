{"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet"]}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use 'switch' with a store of observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-SwitchStore-and-CaseLet-with-switch-and-case]"}],"type":"paragraph"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(_:action:then:fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(state:then:)"],"generated":true,"anchor":"Initializers"},{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/body","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/content","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/fromCaseAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/toCaseState"]},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]}],"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseLet"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"EnumState"},{"text":", ","kind":"text"},{"text":"EnumAction","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"CaseState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Content"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Content","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"platforms":["macOS"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"]]},"abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"reference","isActive":true},{"text":".","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP","doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP"],"title":"Conforms To"}],"metadata":{"platforms":[],"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Structure","externalID":"s:22ComposableArchitecture7CaseLetV","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"role":"symbol","title":"CaseLet","symbolKind":"struct","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}]},"references":{"doc://ComposableArchitecture/7SwiftUI4ViewP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP","title":"SwiftUICore.View"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","title":"SwiftUI Integration","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"title":"SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views.","type":"text"}],"deprecated":true,"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/fromCaseAction":{"url":"\/documentation\/composablearchitecture\/caselet\/fromcaseaction","deprecated":true,"type":"topic","title":"fromCaseAction","kind":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/fromCaseAction","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"fromCaseAction"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"CaseAction"},{"kind":"text","text":") -> "},{"text":"EnumAction","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/content":{"url":"\/documentation\/composablearchitecture\/caselet\/content","deprecated":true,"title":"content","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/content","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"content"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"CaseState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/toCaseState":{"url":"\/documentation\/composablearchitecture\/caselet\/tocasestate","deprecated":true,"title":"toCaseState","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/toCaseState","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toCaseState"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"EnumState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CaseState"},{"text":"?","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/body":{"url":"\/documentation\/composablearchitecture\/caselet\/body","abstract":[],"title":"body","deprecated":true,"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/body","kind":"symbol","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"title":"View Implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","type":"topic","role":"collectionGroup","abstract":[],"url":"\/documentation\/composablearchitecture\/caselet\/view-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/init(_:action:then:fileID:filePath:line:column:)":{"abstract":[{"text":"Initializes a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true},{"text":" view that computes content depending on if a store of enum state","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"matches a particular case."}],"url":"\/documentation\/composablearchitecture\/caselet\/init(_:action:then:fileid:filepath:line:column:)","title":"init(_:action:then:fileID:filePath:line:column:)","deprecated":true,"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(("},{"text":"EnumState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"CaseState","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"CaseAction","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EnumAction"},{"kind":"text","text":", "},{"kind":"externalParam","text":"then"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"CaseState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CaseAction"},{"text":">) -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(_:action:then:fileID:filePath:line:column:)","kind":"symbol","role":"symbol","type":"topic"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","url":"\/documentation\/composablearchitecture\/caselet","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"deprecated":true,"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/init(state:then:)":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"state","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"EnumState"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"CaseState"},{"kind":"text","text":"?, "},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CaseAction"},{"text":">) -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"kind":"text","text":")"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"EnumAction"},{"text":" is ","type":"text"},{"code":"CaseAction","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Content","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"View","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"init(state:then:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(state:then:)","role":"symbol","url":"\/documentation\/composablearchitecture\/caselet\/init(state:then:)","abstract":[{"text":"Initializes a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true},{"text":" view that computes content depending on if a store of enum state","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"matches a particular case."}],"type":"topic"}}}