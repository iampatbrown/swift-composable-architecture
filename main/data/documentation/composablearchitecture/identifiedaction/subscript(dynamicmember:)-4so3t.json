{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/identifiedaction\/subscript(dynamicmember:)-4so3t"]}],"metadata":{"externalID":"s:9CasePaths0A8PathablePAAE13dynamicMemberqd__s7KeyPathCy03AllaB0QzAA03AnyaG0Vyxqd__GG_tcluip::SYNTHESIZED::s:22ComposableArchitecture16IdentifiedActionO","extendedModule":"CasePaths","title":"subscript(dynamicMember:)","symbolKind":"subscript","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"text":" _: ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A8PathableP03AllaB0Qa","kind":"typeIdentifier","text":"AllCasePaths"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths03AnyA4PathV","text":"AnyCasePath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">>) -> "},{"text":"Value","kind":"typeIdentifier"}],"roleHeading":"Instance Subscript","modules":[{"name":"ComposableArchitecture","relatedModules":["CasePaths"]}],"role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction\/subscript(dynamicMember:)-4so3t"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction\/CasePathable-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"keyPath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A8PathableP03AllaB0Qa","text":"AllCasePaths"},{"kind":"text","text":", "},{"text":"AnyCasePath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths03AnyA4PathV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":">>) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" ","kind":"text"},{"kind":"keyword","text":"set"},{"text":" }","kind":"text"}]}]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"CasePathable.subscript(dynamicMember:)"},{"text":".","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction":{"role":"symbol","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a list."}],"navigatorTitle":[{"kind":"identifier","text":"IdentifiedAction"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IdentifiedAction"}],"title":"IdentifiedAction","kind":"symbol","url":"\/documentation\/composablearchitecture\/identifiedaction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction/subscript(dynamicMember:)-4so3t":{"url":"\/documentation\/composablearchitecture\/identifiedaction\/subscript(dynamicmember:)-4so3t","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction\/subscript(dynamicMember:)-4so3t","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"AllCasePaths","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A8PathableP03AllaB0Qa"},{"kind":"text","text":", "},{"preciseIdentifier":"s:9CasePaths03AnyA4PathV","text":"AnyCasePath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">>) -> "},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","title":"subscript(dynamicMember:)","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction/CasePathable-Implementations":{"abstract":[],"title":"CasePathable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction\/CasePathable-Implementations","url":"\/documentation\/composablearchitecture\/identifiedaction\/casepathable-implementations","role":"collectionGroup","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}