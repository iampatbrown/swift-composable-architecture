{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"push","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","text":"StackElementID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"state","kind":"externalParam"},{"kind":"text","text":": "},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":")"}]}]}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Case","symbolKind":"case","role":"symbol","externalID":"s:22ComposableArchitecture11StackActionO4pushyACyxq_GAA0C9ElementIDV_xtcAEmr0_lF","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"push","kind":"identifier"},{"kind":"text","text":"("},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StackElementID","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":")"}],"title":"StackAction.push(id:state:)"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/push(id:state:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"An action sent to present the given state at a given identifier in a navigation stack. This"},{"text":" ","type":"text"},{"text":"action is typically sent from the view via the ","type":"text"},{"code":"NavigationLink(value:)","type":"codeVoice"},{"text":" initializer.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/stackaction\/push(id:state:)"]}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"title":"Navigation","kind":"article","type":"topic","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"url":"\/documentation\/composablearchitecture\/stackstate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","navigatorTitle":[{"kind":"identifier","text":"StackState"}],"type":"topic","title":"StackState","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackState"}],"abstract":[{"text":"A list of data representing the content of a navigation stack.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","title":"Reducer","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/push(id:state:)":{"url":"\/documentation\/composablearchitecture\/stackaction\/push(id:state:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/push(id:state:)","type":"topic","title":"StackAction.push(id:state:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"push","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","text":"StackElementID"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"text":"State","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"An action sent to present the given state at a given identifier in a navigation stack. This","type":"text"},{"type":"text","text":" "},{"text":"action is typically sent from the view via the ","type":"text"},{"type":"codeVoice","code":"NavigationLink(value:)"},{"text":" initializer.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StackElementID","kind":"identifier"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/stackelementid","title":"StackElementID","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"An opaque type that identifies an element of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"StackElementID"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"title":"StackAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","url":"\/documentation\/composablearchitecture\/stackaction","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a navigation stack."}],"navigatorTitle":[{"kind":"identifier","text":"StackAction"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"StackAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}