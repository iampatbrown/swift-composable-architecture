{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"projectedValue"},{"text":": ","kind":"text"},{"text":"Shared","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","preciseIdentifier":"s:22ComposableArchitecture6SharedV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"languages":["swift"]}]},{"parameters":[{"name":"projectedValue","content":[{"type":"paragraph","inlineContent":[{"text":"A shared reference.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"You donâ€™t call this initializer directly. Instead, Swift calls it for you when you use a","type":"text"},{"text":" ","type":"text"},{"text":"property-wrapper attribute on a binding closure parameter.","type":"text"}]}]}],"abstract":[{"type":"text","text":"Creates a shared reference from another shared reference."}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","variants":[{"paths":["\/documentation\/composablearchitecture\/shared\/init(projectedvalue:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Initializer","role":"symbol","externalID":"s:22ComposableArchitecture6SharedV14projectedValueACyxGAE_tcfc","modules":[{"name":"ComposableArchitecture"}],"title":"init(projectedValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"projectedValue","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture6SharedV","kind":"typeIdentifier","text":"Shared"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">)","kind":"text"}],"symbolKind":"init"},"seeAlsoSections":[{"anchor":"Creating-a-shared-value","title":"Creating a shared value","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/init(_:fileID:line:)-9d3q","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/init(_:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/init(projectedValue:)"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared/init(projectedValue:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/init(projectedValue:)","title":"init(projectedValue:)","type":"topic","abstract":[{"text":"Creates a shared reference from another shared reference.","type":"text"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"projectedValue","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture6SharedV","kind":"typeIdentifier","text":"Shared"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">)"}],"url":"\/documentation\/composablearchitecture\/shared\/init(projectedvalue:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"type":"text","text":" "},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"title":"Sharing state","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/sharingstate","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"title":"Shared","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","url":"\/documentation\/composablearchitecture\/shared","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Shared"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared/init(_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/init(_:)","kind":"symbol","role":"symbol","abstract":[{"text":"Unwraps a shared reference to an optional value.","type":"text"}],"title":"init(_:)","url":"\/documentation\/composablearchitecture\/shared\/init(_:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"kind":"typeIdentifier","text":"Shared","preciseIdentifier":"s:22ComposableArchitecture6SharedV"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?>)","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared/init(_:fileID:line:)-9d3q":{"url":"\/documentation\/composablearchitecture\/shared\/init(_:fileid:line:)-9d3q","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/init(_:fileID:line:)-9d3q","title":"init(_:fileID:line:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Wraps a value in a shared reference."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","url":"\/documentation\/composablearchitecture","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","title":"Reducer","kind":"symbol"}}}